<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dlm.jctx.mapper.FileInfoMapper" >
  <resultMap id="BaseResultMap" type="com.dlm.jctx.pojo.FileInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="original_name" property="originalName" jdbcType="VARCHAR" />
    <result column="suffix" property="suffix" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="file_type" property="fileType" jdbcType="INTEGER" />
    <result column="entity_id" property="entityId" jdbcType="INTEGER" />
    <result column="entity_type" property="entityType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, original_name, suffix, path, file_type, entity_id, entity_type, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dlm.jctx.pojo.FileInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from file_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from file_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dlm.jctx.pojo.FileInfoExample" >
    delete from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dlm.jctx.pojo.FileInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into file_info (original_name, suffix, path, 
      file_type, entity_id, entity_type, 
      create_time, update_time)
    values (#{originalName,jdbcType=VARCHAR}, #{suffix,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{fileType,jdbcType=INTEGER}, #{entityId,jdbcType=INTEGER}, #{entityType,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dlm.jctx.pojo.FileInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="originalName != null" >
        original_name,
      </if>
      <if test="suffix != null" >
        suffix,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="fileType != null" >
        file_type,
      </if>
      <if test="entityId != null" >
        entity_id,
      </if>
      <if test="entityType != null" >
        entity_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="originalName != null" >
        #{originalName,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null" >
        #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=INTEGER},
      </if>
      <if test="entityId != null" >
        #{entityId,jdbcType=INTEGER},
      </if>
      <if test="entityType != null" >
        #{entityType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dlm.jctx.pojo.FileInfoExample" resultType="java.lang.Integer" >
    select count(*) from file_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update file_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.originalName != null" >
        original_name = #{record.originalName,jdbcType=VARCHAR},
      </if>
      <if test="record.suffix != null" >
        suffix = #{record.suffix,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.fileType != null" >
        file_type = #{record.fileType,jdbcType=INTEGER},
      </if>
      <if test="record.entityId != null" >
        entity_id = #{record.entityId,jdbcType=INTEGER},
      </if>
      <if test="record.entityType != null" >
        entity_type = #{record.entityType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update file_info
    set id = #{record.id,jdbcType=INTEGER},
      original_name = #{record.originalName,jdbcType=VARCHAR},
      suffix = #{record.suffix,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      file_type = #{record.fileType,jdbcType=INTEGER},
      entity_id = #{record.entityId,jdbcType=INTEGER},
      entity_type = #{record.entityType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlm.jctx.pojo.FileInfo" >
    update file_info
    <set >
      <if test="originalName != null" >
        original_name = #{originalName,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null" >
        suffix = #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        file_type = #{fileType,jdbcType=INTEGER},
      </if>
      <if test="entityId != null" >
        entity_id = #{entityId,jdbcType=INTEGER},
      </if>
      <if test="entityType != null" >
        entity_type = #{entityType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlm.jctx.pojo.FileInfo" >
    update file_info
    set original_name = #{originalName,jdbcType=VARCHAR},
      suffix = #{suffix,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=INTEGER},
      entity_id = #{entityId,jdbcType=INTEGER},
      entity_type = #{entityType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>